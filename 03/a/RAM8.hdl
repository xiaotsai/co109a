// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=addA, b=addB, c=addC, d=addD, e=addE, f=addF, g=addG, h=addH);
    Register(in=in, load=addA, out=regA);
    Register(in=in, load=addB, out=regB);
    Register(in=in, load=addC, out=regC);
    Register(in=in, load=addD, out=regD);
    Register(in=in, load=addE, out=regE);
    Register(in=in, load=addF, out=regF);
    Register(in=in, load=addG, out=regG);
    Register(in=in, load=addH, out=regH);
    Mux8Way16(a=regA, b=regB, c=regC, d=regD, e=regE, f=regF, g=regG, h=regH, sel=address, out=out);
}